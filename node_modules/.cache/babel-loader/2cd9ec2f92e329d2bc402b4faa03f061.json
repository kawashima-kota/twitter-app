{"ast":null,"code":"var _jsxFileName = \"/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx\";\nimport React from 'react';\nimport styles from \"./Post.module.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  var _props$timestamp;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_avatar,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_header,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerUser,\n              children: [\"@\", props.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_props$timestamp = props.timestamp) === null || _props$timestamp === void 0 ? void 0 : _props$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_tweet,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), props.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post_tweetImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageIcon, {\n        className: styles.post_commentIcon,\n        onClick: () => setOpenComments(!openComments)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), openComments && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comments.map(com => {\n          var _com$timestamp;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.post_comment,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: com.avatar,\n              className: classes.small\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_commentUser,\n              children: [\"@\", com.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_commentText,\n              children: [com.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_com$timestamp = com.timestamp) === null || _com$timestamp === void 0 ? void 0 : _com$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, com.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: newComment,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.post_form,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.post_input,\n              type: \"text\",\n              placeholder: \"Type new comment...\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !comment,\n              className: comment ? styles.post_button : styles.post_buttonDisable,\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                className: styles.post_sendIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx"],"names":["React","styles","Avatar","MessageIcon","SendIcon","Post","props","post","post_avatar","avatar","post_body","post_header","post_headerUser","username","post_headerTime","Date","timestamp","toDate","toLocaleString","post_tweet","text","image","post_tweetImage","post_commentIcon","setOpenComments","openComments","comments","map","com","post_comment","classes","small","post_commentUser","post_commentText","id","newComment","post_form","post_input","comment","e","setComment","target","value","post_button","post_buttonDisable","post_sendIcon"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport styles from \"./Post.module.css\";\nimport {db} from \"../firebase/index\"\nimport firebase from \"firebase/app\"\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nconst Post:React.FC<PROPS> = (props) => {\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n\n        <MessageIcon\n          className={styles.post_commentIcon}\n          onClick={() => setOpenComments(!openComments)}\n        />\n\n        {openComments && (\n          <>\n            {comments.map((com) => (\n              <div key={com.id} className={styles.post_comment}>\n                <Avatar src={com.avatar} className={classes.small} />\n\n                <span className={styles.post_commentUser}>@{com.username}</span>\n                <span className={styles.post_commentText}>{com.text} </span>\n                <span className={styles.post_headerTime}>\n                  {new Date(com.timestamp?.toDate()).toLocaleString()}\n                </span>\n              </div>\n            ))}\n\n            <form onSubmit={newComment}>\n              <div className={styles.post_form}>\n                <input\n                  className={styles.post_input}\n                  type=\"text\"\n                  placeholder=\"Type new comment...\"\n                  value={comment}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setComment(e.target.value)\n                  }\n                />\n                <button\n                  disabled={!comment}\n                  className={\n                    comment ? styles.post_button : styles.post_buttonDisable\n                  }\n                  type=\"submit\"\n                >\n                  <SendIcon className={styles.post_sendIcon} />\n                </button>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}