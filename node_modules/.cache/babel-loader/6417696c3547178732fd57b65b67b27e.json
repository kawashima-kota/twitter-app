{"ast":null,"code":"var _jsxFileName = \"/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from \"./Post.module.css\";\nimport { db } from \"../firebase/index\";\nimport firebase from \"firebase/app\";\nimport { Avatar } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  var _props$timestamp;\n\n  const [comment, setComment] = useState(\"\");\n\n  const newComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(props.postId).collection(\"comments\").add({\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_avatar,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_header,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerUser,\n              children: [\"@\", props.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_props$timestamp = props.timestamp) === null || _props$timestamp === void 0 ? void 0 : _props$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_tweet,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), props.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post_tweetImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"/VjQS9GbyOLJ9zagnNHrn5zzwZE=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx"],"names":["React","useState","styles","db","firebase","Avatar","Post","props","comment","setComment","newComment","e","preventDefault","collection","doc","postId","add","avatar","user","photoUrl","text","timestamp","firestore","FieldValue","serverTimestamp","username","displayName","post","post_avatar","post_body","post_header","post_headerUser","post_headerTime","Date","toDate","toLocaleString","post_tweet","image","post_tweetImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,EAAR,QAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAGA,SAASC,MAAT,QAAuB,mBAAvB;;;AAcA,MAAMC,IAAoB,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;;AAEF,QAAMS,UAAU,GAAIC,CAAD,IAAyC;AACxDA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,EAAE,CAACU,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BP,KAAK,CAACQ,MAAjC,EAAyCF,UAAzC,CAAoD,UAApD,EAAgEG,GAAhE,CAAoE;AAClEC,MAAAA,MAAM,EAAEC,IAAI,CAACC,QADqD;AAElEC,MAAAA,IAAI,EAAEZ,OAF4D;AAGlEa,MAAAA,SAAS,EAAEjB,QAAQ,CAACkB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAHuD;AAIlEC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ;AAJmD,KAApE;AAMAjB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GATH;;AAUE,sBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACyB,IAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,WAAvB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAErB,KAAK,CAACU;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAAC2B,SAAvB;AAAA,8BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE3B,MAAM,CAAC4B,WAAvB;AAAA,iCACE;AAAA,oCACE;AAAM,cAAA,SAAS,EAAE5B,MAAM,CAAC6B,eAAxB;AAAA,8BAA2CxB,KAAK,CAACkB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAEvB,MAAM,CAAC8B,eAAxB;AAAA,wBACG,IAAIC,IAAJ,qBAAS1B,KAAK,CAACc,SAAf,qDAAS,iBAAiBa,MAAjB,EAAT,EAAoCC,cAApC;AADH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAEjC,MAAM,CAACkC,UAAvB;AAAA,iCACE;AAAA,sBAAI7B,KAAK,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAcGb,KAAK,CAAC8B,KAAN,iBACC;AAAK,QAAA,SAAS,EAAEnC,MAAM,CAACoC,eAAvB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE/B,KAAK,CAAC8B,KAAhB;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxCD;;GAAM/B,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport styles from \"./Post.module.css\";\nimport {db} from \"../firebase/index\"\nimport firebase from \"firebase/app\"\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nconst Post:React.FC<PROPS> = (props) => {\n  const [comment , setComment] = useState(\"\");\n\nconst newComment = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(props.postId).collection(\"comments\").add({\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName,\n    });\n    setComment(\"\");\n  };\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}