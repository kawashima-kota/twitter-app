{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";export var userSlice=createSlice({name:\"user\",initialState:{user:{uid:\"\",photoUrl:\"\",displayName:\"\"}},reducers:{login:function login(state,action){state.user=action.payload;},logout:function logout(state){state.user={uid:\"\",photoUrl:\"\",displayName:\"\"};},updateUserProfile:function updateUserProfile(state,action){state.user.displayName=action.payload.displayName;state.user.photoUrl=action.payload.photoUrl;}}});var _userSlice$actions=userSlice.actions,login=_userSlice$actions.login,logout=_userSlice$actions.logout,updateUserProfile=_userSlice$actions.updateUserProfile;export{login,logout,updateUserProfile};export var selectUser=function selectUser(state){return state.user.user;};export default userSlice.reducer;","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/features/userSlice.ts"],"names":["createSlice","userSlice","name","initialState","user","uid","photoUrl","displayName","reducers","login","state","action","payload","logout","updateUserProfile","actions","selectUser","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAQA,MAAO,IAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CACnCE,IAAI,CAAE,MAD6B,CAEnCC,YAAY,CAAE,CACZC,IAAI,CAAE,CAAEC,GAAG,CAAE,EAAP,CAAWC,QAAQ,CAAE,EAArB,CAAyBC,WAAW,CAAE,EAAtC,CADM,CAFqB,CAKnCC,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,CAAQC,MAAR,CAAmB,CACxBD,KAAK,CAACN,IAAN,CAAaO,MAAM,CAACC,OAApB,CACD,CAHO,CAIRC,MAAM,CAAE,gBAAAH,KAAK,CAAI,CACfA,KAAK,CAACN,IAAN,CAAa,CAAEC,GAAG,CAAE,EAAP,CAAWC,QAAQ,CAAE,EAArB,CAAyBC,WAAW,CAAE,EAAtC,CAAb,CACD,CANO,CAORO,iBAAiB,CAAE,2BAACJ,KAAD,CAAQC,MAAR,CAAwC,CACzDD,KAAK,CAACN,IAAN,CAAWG,WAAX,CAAyBI,MAAM,CAACC,OAAP,CAAeL,WAAxC,CACAG,KAAK,CAACN,IAAN,CAAWE,QAAX,CAAsBK,MAAM,CAACC,OAAP,CAAeN,QAArC,CACD,CAVO,CALyB,CAAD,CAA7B,C,uBAmB6CL,SAAS,CAACc,O,CAA/CN,K,oBAAAA,K,CAAOI,M,oBAAAA,M,CAASC,iB,oBAAAA,iB,wCAE/B,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,KAAD,QAAsBA,CAAAA,KAAK,CAACN,IAAN,CAAWA,IAAjC,EAAnB,CAEP,cAAeH,CAAAA,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../app/store\";\n\ninterface USER {\n  displayName: string;\n  photoUrl: string;\n}\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: { uid: \"\", photoUrl: \"\", displayName: \"\" }\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = { uid: \"\", photoUrl: \"\", displayName: \"\" };\n    },\n    updateUserProfile: (state, action: PayloadAction<USER>) => {\n      state.user.displayName = action.payload.displayName;\n      state.user.photoUrl = action.payload.photoUrl;\n    },\n  }\n});\n\nexport const { login, logout , updateUserProfile} = userSlice.actions;\n\nexport const selectUser = (state: RootState) => state.user.user;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}