{"ast":null,"code":"var _jsxFileName = \"/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './Auth.module.css';\nimport { useDispatch } from 'react-redux';\nimport { updateUserProfile } from '../features/userSlice';\nimport { auth, provider, storage } from '../firebase/index';\nimport { Avatar, Button, CssBaseline, TextField, Paper, Grid, Typography, makeStyles, IconButton, Box } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1581784368651-8916092072cf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch(err => alert(err.message));\n  };\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [avatarImage, setAvatarImage] = useState(null);\n\n  const onChangeImageHandler = e => {\n    if (e.target.files[0]) {\n      setAvatarImage(e.target.files[0]);\n      e.target.value = \"\";\n    }\n  };\n\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const signUpEmail = async () => {\n    var _authUser$user;\n\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n\n    if (avatarImage) {\n      const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n      await storage.ref(`avatars/${fileName}`).put(avatarImage);\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n    }\n\n    await ((_authUser$user = authUser.user) === null || _authUser$user === void 0 ? void 0 : _authUser$user.updateProfile({\n      displayName: username,\n      photoURL: url\n    }));\n    dispatch(updateUserProfile({\n      displayName: username,\n      photoUrl: url\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\",\n              autoComplete: \"username\",\n              autoFocus: true,\n              value: username,\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n                    fontSize: \"large\",\n                    className: avatarImage ? styles.login_addIconLoaded : styles.login_addIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: styles.login_hiddenIcon,\n                    type: \"file\",\n                    onChange: onChangeImageHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            startIcon: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 26\n            }, this),\n            onClick: isLogin ? async () => {\n              try {\n                await signInEmail();\n              } catch (err) {\n                alert(err.message);\n              }\n            } : async () => {\n              try {\n                await signUpEmail();\n              } catch (err) {\n                alert(err.message);\n              }\n            },\n            children: isLogin ? \"Login\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.login_reset,\n                children: \"Forgot Password ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.login_toggleMode,\n                onClick: () => setIsLogin(!isLogin),\n                children: isLogin ? \"Create new account ?\" : \"Back to login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: signInGoogle,\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"SP8jIcwseTwhoT3a3pvlR9CssSQ=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Auth.tsx"],"names":["React","useState","styles","useDispatch","updateUserProfile","auth","provider","storage","Avatar","Button","CssBaseline","TextField","Paper","Grid","Typography","makeStyles","IconButton","Box","EmailIcon","LockOutlinedIcon","AccountCircleIcon","useStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Auth","classes","dispatch","signInGoogle","signInWithPopup","catch","err","alert","message","email","setEmail","password","setPassword","isLogin","setIsLogin","username","setUsername","avatarImage","setAvatarImage","onChangeImageHandler","e","target","files","value","signInEmail","signInWithEmailAndPassword","signUpEmail","authUser","createUserWithEmailAndPassword","url","S","N","randomChar","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","fileName","name","ref","put","child","getDownloadURL","user","updateProfile","displayName","photoURL","photoUrl","login_addIconLoaded","login_addIcon","login_hiddenIcon","login_reset","login_toggleMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,IAAR,EAAaC,QAAb,EAAsBC,OAAtB,QAAoC,mBAApC;AAEA,SACEC,MADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,UAPF,EAQEC,UARF,EAUEC,UAVF,EAWEC,GAXF,QAYO,mBAZP;AAgBA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,4IADZ;AAELC,IAAAA,gBAAgB,EAAE,WAFb;AAGLC,IAAAA,eAAe,EACbN,KAAK,CAACO,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GAAiCR,KAAK,CAACO,OAAN,CAAcE,IAAd,CAAmB,EAAnB,CAAjC,GAA0DT,KAAK,CAACO,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CAJvD;AAKLC,IAAAA,cAAc,EAAE,OALX;AAMLC,IAAAA,kBAAkB,EAAE;AANf,GAJgC;AAYvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAZgC;AAkBvCC,EAAAA,MAAM,EAAE;AACNL,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CADF;AAENR,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcY,SAAd,CAAwBC;AAFnC,GAlB+B;AAsBvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfC,IAAAA,SAAS,EAAEvB,KAAK,CAACc,OAAN,CAAc,CAAd;AAFP,GAtBiC;AA0BvCU,EAAAA,MAAM,EAAE;AACNX,IAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AA1B+B,CAAZ,CAAD,CAA5B;;AA+BA,MAAMW,IAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM4B,QAAQ,GAAG9C,WAAW,EAA5B;;AACA,QAAM+C,YAAY,GAAG,YAAY;AAC/B,UAAM7C,IAAI,CAAC8C,eAAL,CAAqB7C,QAArB,EAA+B8C,KAA/B,CAAsCC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAnD,CAAN;AACD,GAFD;;AAGA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBxD,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACyD,QAAD,EAAUC,WAAV,IAAyB1D,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAC2D,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC6D,QAAD,EAAWC,WAAX,IAA0B9D,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC+D,WAAD,EAAcC,cAAd,IAAgChE,QAAQ,CAAc,IAAd,CAA9C;;AAEA,QAAMiE,oBAAoB,GAAIC,CAAD,IAA4C;AACvE,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAgB,CAAhB,CAAJ,EAAwB;AACtBJ,MAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAgB,CAAhB,CAAD,CAAd;AACAF,MAAAA,CAAC,CAACC,MAAF,CAASE,KAAT,GAAiB,EAAjB;AACD;AACF,GALD;;AAMA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMlE,IAAI,CAACmE,0BAAL,CAAgChB,KAAhC,EAAsCE,QAAtC,CAAN;AACD,GAFD;;AAGA,QAAMe,WAAW,GAAG,YAAY;AAAA;;AAC9B,UAAMC,QAAQ,GAAG,MAAMrE,IAAI,CAACsE,8BAAL,CAAoCnB,KAApC,EAA2CE,QAA3C,CAAvB;AACA,QAAIkB,GAAG,GAAG,EAAV;;AACA,QAAIZ,WAAJ,EAAiB;AACf,YAAMa,CAAC,GACL,gEADF;AAEA,YAAMC,CAAC,GAAG,EAAV;AACA,YAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,eAAP,CAAuB,IAAIC,WAAJ,CAAgBN,CAAhB,CAAvB,CAAX,EAChBO,GADgB,CACXC,CAAD,IAAOT,CAAC,CAACS,CAAC,GAAGT,CAAC,CAACU,MAAP,CADI,EAEhBC,IAFgB,CAEX,EAFW,CAAnB;AAGA,YAAMC,QAAQ,GAAGV,UAAU,GAAG,GAAb,GAAmBf,WAAW,CAAC0B,IAAhD;AACA,YAAMnF,OAAO,CAACoF,GAAR,CAAa,WAAUF,QAAS,EAAhC,EAAmCG,GAAnC,CAAuC5B,WAAvC,CAAN;AACAY,MAAAA,GAAG,GAAG,MAAMrE,OAAO,CAACoF,GAAR,CAAY,SAAZ,EAAuBE,KAAvB,CAA6BJ,QAA7B,EAAuCK,cAAvC,EAAZ;AACD;;AACD,6BAAMpB,QAAQ,CAACqB,IAAf,mDAAM,eAAeC,aAAf,CAA6B;AACjCC,MAAAA,WAAW,EAAEnC,QADoB;AAEjCoC,MAAAA,QAAQ,EAAEtB;AAFuB,KAA7B,CAAN;AAIA3B,IAAAA,QAAQ,CACN7C,iBAAiB,CAAC;AAChB6F,MAAAA,WAAW,EAAEnC,QADG;AAEhBqC,MAAAA,QAAQ,EAAEvB;AAFM,KAAD,CADX,CAAR;AAMD,GAxBD;;AA0BA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAiC,IAAA,SAAS,EAAE5B,OAAO,CAACzB,IAApD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,KAAf;AAAsB,MAAA,EAAE,EAAE,CAA1B;AAA6B,MAAA,EAAE,EAAE,CAAjC;AAAoC,MAAA,SAAS,EAAEyB,OAAO,CAACvB;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,SAAS,EAAEb,KAA5C;AAAmD,MAAA,SAAS,EAAE,CAA9D;AAAiE,MAAA,MAAM,MAAvE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEoC,OAAO,CAACd,KAAxB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEc,OAAO,CAACR,MAA3B;AAAA,iCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAM,UAAA,SAAS,EAAEQ,OAAO,CAACL,IAAzB;AAA+B,UAAA,UAAU,MAAzC;AAAA,qBAEC,CAACiB,OAAD,iBACG;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,MAAM,EAAC,QAFT;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,EAAE,EAAC,UALL;AAME,cAAA,KAAK,EAAC,UANR;AAOE,cAAA,IAAI,EAAC,UAPP;AAQE,cAAA,YAAY,EAAC,UARf;AASE,cAAA,SAAS,MATX;AAUE,cAAA,KAAK,EAAEE,QAVT;AAWE,cAAA,QAAQ,EAAGK,CAAD,IAA4C;AACpDJ,gBAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,oBADF,eAgBE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACE,QAAC,UAAD;AAAA,uCACE;AAAA,0CACE,QAAC,iBAAD;AACE,oBAAA,QAAQ,EAAC,OADX;AAEE,oBAAA,SAAS,EACPN,WAAW,GACP9D,MAAM,CAACkG,mBADA,GAEPlG,MAAM,CAACmG;AALf;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AACE,oBAAA,SAAS,EAAEnG,MAAM,CAACoG,gBADpB;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,QAAQ,EAAEpC;AAHZ;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA,0BAHJ,eAwCE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,EAAE,EAAC,OALL;AAME,YAAA,KAAK,EAAC,eANR;AAOE,YAAA,IAAI,EAAC,OAPP;AAQE,YAAA,YAAY,EAAC,OARf;AASE,YAAA,SAAS,MATX;AAUE,YAAA,KAAK,EAAEV,KAVT;AAWE,YAAA,QAAQ,EACLW,CAAD,IAA2C;AACzCV,cAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR;AACD;AAdL;AAAA;AAAA;AAAA;AAAA,kBAxCF,eA0DE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,IAAI,EAAC,UALP;AAME,YAAA,KAAK,EAAC,UANR;AAOE,YAAA,IAAI,EAAC,UAPP;AAQE,YAAA,EAAE,EAAC,UARL;AASE,YAAA,YAAY,EAAC,kBATf;AAUE,YAAA,KAAK,EAAEZ,QAVT;AAWE,YAAA,QAAQ,EACLS,CAAD,IAAyC;AACvCR,cAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACD;AAdL;AAAA;AAAA;AAAA;AAAA,kBA1DF,eA2EE,QAAC,MAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,SAAS,EAAEtB,OAAO,CAACF,MAJrB;AAKE,YAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBALb;AAME,YAAA,OAAO,EACLc,OAAO,GAAG,YAAW;AACnB,kBAAG;AACD,sBAAMW,WAAW,EAAjB;AACD,eAFD,CAEC,OAAMlB,GAAN,EAAU;AACTC,gBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD;AACF,aANM,GAMH,YAAY;AACd,kBAAG;AACD,sBAAMkB,WAAW,EAAjB;AACD,eAFD,CAEC,OAAMpB,GAAN,EAAU;AACTC,gBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD;AACF,aAnBL;AAAA,sBAsBCK,OAAO,GAAG,OAAH,GAAa;AAtBrB;AAAA;AAAA;AAAA;AAAA,kBA3EF,eAmGE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,MAAb;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAE1D,MAAM,CAACqG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAErG,MAAM,CAACsG,gBAAxB;AAA0C,gBAAA,OAAO,EAAE,MAAK3C,UAAU,CAAC,CAACD,OAAF,CAAlE;AAAA,0BACCA,OAAO,GAAG,sBAAH,GAA4B;AADpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnGF,eA+GE,QAAC,MAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,SAAS,EAAEZ,OAAO,CAACF,MAJrB;AAKE,YAAA,OAAO,EAAII,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/GF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyID,CAxLD;;GAAMH,I;UACY1B,S,EACClB,W;;;KAFb4C,I;AA0LN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react';\nimport styles from './Auth.module.css';\nimport {useDispatch} from 'react-redux';\nimport {updateUserProfile} from '../features/userSlice';\nimport {auth,provider,storage} from '../firebase/index';\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  makeStyles,\n  Modal,\n  IconButton,\n  Box,\n} from \"@material-ui/core\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CameraIcon from \"@material-ui/icons/Camera\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1581784368651-8916092072cf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Auth:React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch((err) => alert(err.message));\n  };\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [avatarImage, setAvatarImage] = useState<File | null>(null);\n\n  const onChangeImageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files![0]) {\n      setAvatarImage(e.target.files![0]);\n      e.target.value = \"\";\n    }\n  };\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email,password);\n  };\n  const signUpEmail = async () => {\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n    if (avatarImage) {\n      const S =\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n      await storage.ref(`avatars/${fileName}`).put(avatarImage);\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n    }\n    await authUser.user?.updateProfile({\n      displayName: username,\n      photoURL: url,\n    });\n    dispatch(\n      updateUserProfile({\n        displayName: username,\n        photoUrl: url,\n      })\n    );\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n\n          {!isLogin && (\n              <>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  value={username}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUsername(e.target.value);\n                  }}\n                />\n                <Box textAlign=\"center\">\n                  <IconButton>\n                    <label>\n                      <AccountCircleIcon\n                        fontSize=\"large\"\n                        className={\n                          avatarImage\n                            ? styles.login_addIconLoaded\n                            : styles.login_addIcon\n                        }\n                      />\n                      <input\n                        className={styles.login_hiddenIcon}\n                        type=\"file\"\n                        onChange={onChangeImageHandler}\n                      />\n                    </label>\n                  </IconButton>\n                </Box>\n              </>\n            )}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={\n                (e:React.ChangeEvent<HTMLInputElement>) => {\n                  setEmail(e.target.value)\n                }\n              }\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange ={\n                (e:React.ChangeEvent<HTMLInputElement>)=>{\n                  setPassword(e.target.value)\n                }\n              }\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              startIcon={<EmailIcon />}\n              onClick={\n                isLogin ? async () =>{\n                  try{\n                    await signInEmail();\n                  }catch(err){\n                    alert(err.message);\n                  }\n                } : async () => {\n                  try{\n                    await signUpEmail();\n                  }catch(err){\n                    alert(err.message);\n                  }\n                }\n              }\n            >\n            {isLogin ? \"Login\" : \"Register\"}\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <span className={styles.login_reset}>\n                  Forgot Password ?\n                </span>\n              </Grid>\n              <Grid item >\n                <span className={styles.login_toggleMode} onClick={()=> setIsLogin(!isLogin)}>\n                {isLogin ? \"Create new account ?\" : \"Back to login\"}\n                </span>\n              </Grid>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick = {signInGoogle}\n            >\n              Sign In with Google\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}