{"ast":null,"code":"var _jsxFileName = \"/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { db } from \"../firebase/index\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  var _props$timestamp;\n\n  const user = useSelector(selectUser);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([{\n    id: \"\"\n  }]);\n\n  const newComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(props.postId).collection(\"comments\").add({\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_avatar,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.post_body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_header,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerUser,\n              children: [\"@\", props.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.post_headerTime,\n              children: new Date((_props$timestamp = props.timestamp) === null || _props$timestamp === void 0 ? void 0 : _props$timestamp.toDate()).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_tweet,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), props.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post_tweetImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: newComment,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.post_input,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.post_input,\n            type: \"text\",\n            placeholder: \"Type new comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !comment,\n            className: comment ? styles.post_button : styles.post_buttonDisable,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {\n              className: styles.post_sendIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"b1aHmi3Uuwer1n7wrcB+W5Kg1cc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Post.tsx"],"names":["React","useState","styles","db","firebase","useSelector","selectUser","Avatar","SendIcon","Post","props","user","comment","setComment","comments","setComments","id","newComment","e","preventDefault","collection","doc","postId","add","avatar","photoUrl","text","timestamp","firestore","FieldValue","serverTimestamp","username","displayName","post","post_avatar","post_body","post_header","post_headerUser","post_headerTime","Date","toDate","toLocaleString","post_tweet","image","post_tweetImage","post_input","target","value","post_button","post_buttonDisable","post_sendIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { db } from \"../firebase/index\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface PROPS {\n  postId: string;\n  avatar: string;\n  image: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\ninterface COMMENT {\n  id: string;\n  avatar: string;\n  text: string;\n  timestamp: any;\n  username: string;\n}\n\nconst Post: React.FC<PROPS> = props => {\n  const user = useSelector(selectUser);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState<COMMENT[]>([\n    {\n      id:\"\"\n    }\n  ])\n  const newComment = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    db.collection(\"posts\")\n      .doc(props.postId)\n      .collection(\"comments\")\n      .add({\n        avatar: user.photoUrl,\n        text: comment,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        username: user.displayName\n      });\n    setComment(\"\");\n  };\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.post_avatar}>\n        <Avatar src={props.avatar} />\n      </div>\n      <div className={styles.post_body}>\n        <div>\n          <div className={styles.post_header}>\n            <h3>\n              <span className={styles.post_headerUser}>@{props.username}</span>\n              <span className={styles.post_headerTime}>\n                {new Date(props.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </h3>\n          </div>\n          <div className={styles.post_tweet}>\n            <p>{props.text}</p>\n          </div>\n        </div>\n        {props.image && (\n          <div className={styles.post_tweetImage}>\n            <img src={props.image} alt=\"tweet\" />\n          </div>\n        )}\n        <form onSubmit={newComment}>\n          <div className={styles.post_input}>\n            <input\n              className={styles.post_input}\n              type=\"text\"\n              placeholder=\"Type new comment...\"\n              value={comment}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setComment(e.target.value)\n              }\n            />\n            <button\n              disabled={!comment}\n              className={\n                comment ? styles.post_button : styles.post_buttonDisable\n              }\n              type=\"submit\"\n            >\n              <SendIcon className={styles.post_sendIcon} />\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}