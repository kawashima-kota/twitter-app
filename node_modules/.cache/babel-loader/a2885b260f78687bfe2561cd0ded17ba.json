{"ast":null,"code":"import _slicedToArray from\"/Users/kawashimakouta/Desktop/react-projects/twitter-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{db}from\"../firebase/index\";import TweetInput from\"./TweetInput\";import styles from\"./Feed.module.css\";import Post from\"./Post\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Feed=function Feed(){var _posts$;var _useState=useState([{id:\"\",avatar:\"\",image:\"\",text:\"\",timestamp:null,username:\"\"}]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];//マウント時に一回実行\nuseEffect(function(){var unSub=db.collection(\"posts\")//タイムスタンプの降順で並べ替える\n.orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){return setPosts(snapshot.docs.map(function(doc){return{id:doc.id,avatar:doc.data().avatar,image:doc.data().image,text:doc.data().text,timestamp:doc.data().timestamp,username:doc.data().username};}));});return function(){unSub();};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.feed,children:[/*#__PURE__*/_jsx(TweetInput,{}),((_posts$=posts[0])===null||_posts$===void 0?void 0:_posts$.id)&&/*#__PURE__*/_jsx(_Fragment,{children:posts.map(function(post){return/*#__PURE__*/_jsx(Post,{postId:post.id,avatar:post.avatar,image:post.image,text:post.text,timestamp:post.timestamp,username:post.username},post.id);})})]});};export default Feed;","map":{"version":3,"sources":["/Users/kawashimakouta/Desktop/react-projects/twitter-app/src/components/Feed.tsx"],"names":["React","useState","useEffect","db","TweetInput","styles","Post","Feed","id","avatar","image","text","timestamp","username","posts","setPosts","unSub","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","feed","post"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,EAAR,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,GAAMC,CAAAA,IAAc,CAAE,QAAhBA,CAAAA,IAAgB,EAAM,2BACDN,QAAQ,CAAC,CAChC,CACEO,EAAE,CAAC,EADL,CAEEC,MAAM,CAAC,EAFT,CAGEC,KAAK,CAAC,EAHR,CAIEC,IAAI,CAAC,EAJP,CAKEC,SAAS,CAAC,IALZ,CAMEC,QAAQ,CAAC,EANX,CADgC,CAAD,CADP,wCACnBC,KADmB,eACbC,QADa,eAY1B;AACAb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,KAAK,CAAGb,EAAE,CACbc,UADW,CACA,OADA,CAEZ;AAFY,CAGXC,OAHW,CAGH,WAHG,CAGU,MAHV,EAIXC,UAJW,CAIA,SAACC,QAAD,QACVL,CAAAA,QAAQ,CACNK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAACC,GAAD,QAAU,CAC1Bf,EAAE,CAAEe,GAAG,CAACf,EADkB,CAE1BC,MAAM,CAAEc,GAAG,CAACC,IAAJ,GAAWf,MAFO,CAG1BC,KAAK,CAAEa,GAAG,CAACC,IAAJ,GAAWd,KAHQ,CAI1BC,IAAI,CAAEY,GAAG,CAACC,IAAJ,GAAWb,IAJS,CAK1BC,SAAS,CAAEW,GAAG,CAACC,IAAJ,GAAWZ,SALI,CAM1BC,QAAQ,CAAEU,GAAG,CAACC,IAAJ,GAAWX,QANK,CAAV,EAAlB,CADM,CADE,EAJA,CAAd,CAgBA,MAAO,WAAM,CACXG,KAAK,GACN,CAFD,CAGD,CApBQ,CAoBN,EApBM,CAAT,CAsBA,mBACE,aAAK,SAAS,CAAEX,MAAM,CAACoB,IAAvB,wBACE,KAAC,UAAD,IADF,CAEG,UAAAX,KAAK,CAAC,CAAD,CAAL,0CAAUN,EAAV,gBACC,yBAEGM,KAAK,CAACQ,GAAN,CAAU,SAACI,IAAD,CAAQ,CACjB,mBAAO,KAAC,IAAD,EAEP,MAAM,CAAEA,IAAI,CAAClB,EAFN,CAGP,MAAM,CAAEkB,IAAI,CAACjB,MAHN,CAIP,KAAK,CAAEiB,IAAI,CAAChB,KAJL,CAKP,IAAI,CAAEgB,IAAI,CAACf,IALJ,CAMP,SAAS,CAAEe,IAAI,CAACd,SANT,CAOP,QAAQ,CAAEc,IAAI,CAACb,QAPR,EACFa,IAAI,CAAClB,EADH,CAAP,CASD,CAVA,CAFH,EAHJ,GADF,CAqBD,CAxDD,CA0DA,cAAeD,CAAAA,IAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport {db} from \"../firebase/index\"\nimport TweetInput from \"./TweetInput\";\nimport styles from \"./Feed.module.css\"\nimport Post from \"./Post\";\n\nconst Feed :React.FC= () => {\n  const [posts,setPosts] = useState([\n    {\n      id:\"\",\n      avatar:\"\",\n      image:\"\",\n      text:\"\",\n      timestamp:null,\n      username:\"\"\n    }\n  ]);\n\n  //マウント時に一回実行\n  useEffect(() => {\n    const unSub = db\n      .collection(\"posts\")\n      //タイムスタンプの降順で並べ替える\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            avatar: doc.data().avatar,\n            image: doc.data().image,\n            text: doc.data().text,\n            timestamp: doc.data().timestamp,\n            username: doc.data().username,\n          }))\n        )\n      );\n    return () => {\n      unSub();\n    };\n  }, []);\n\n  return(\n    <div className={styles.feed}>\n      <TweetInput />\n      {posts[0]?.id && (\n        <>\n          {/* dbから受け取ったデータをPostコンポーネントを用いて展開 */}\n          {posts.map((post)=>{\n            return <Post \n            key={post.id}\n            postId={post.id} \n            avatar={post.avatar} \n            image={post.image}\n            text={post.text}\n            timestamp={post.timestamp}\n            username={post.username}\n            />\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}